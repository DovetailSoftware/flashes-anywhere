'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Product        :  Flashes Anywhere(tm)
'
' Series         :  Dovetail Workflow Series(tm)
'
' Name           :  Select Flashes form
'
' Description    :  Displays form for selecting flashes
'
' Author         :  Dovetail Software, Inc.
'                   4807 Spicewood Springs Rd, Bldg 4 Suite 200
'                   Austin, TX 78759
'                   (512) 610-5400
'                   EMAIL: support@dovetailsoftware.com
'                   www.dovetailsoftware.com
'
' Platforms       : This version supports Clarify 4.5 and later
'
' Copyright (C)  2000 Dovetail Software, Inc.
' All Rights Reserved.
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Functional Declarations
'
' Copyright (C) 2000. Dovetail Software. All Rights Reserved.
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

OPTION EXPLICIT

Declare Public Sub clear_items(items_to_show As Integer)
Declare Public Sub DDL_TABLE_Click()
Declare Public Function get_table_number(tbl_rec As Record) As Integer

                                        ' Functional prototype declarations
Declare Public Sub get_strings(start_val As Long, num_strings As Integer, _
                   locale As String, application As String, ret_strings As List)
Declare Function msg_box(the_text As String, the_caption As String, the_type As Integer) _
                         As Integer
Declare Public Function get_sprintf(str_num As Long, locale As String, application As String, _
                     Optional arg1 As Variant, Optional arg2 As Variant, _
                     Optional arg3 As Variant, Optional arg4 As Variant, _
                     Optional arg5 As Variant, Optional arg6 As Variant) _
                     As String

Dim tbl_list As List                    ' List of tables/views that can have
                                        '  flashes
Dim tbl_rec  As Record                  ' Current table record selected from DDL
Dim tbl_num  As Integer                 ' Table number of base table

                                        ' Global variables
Global locale As String                 ' Locale of user

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Constants
'
' Copyright (C) 2000. Dovetail Software. All Rights Reserved.
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Const MSG_FL_DIRTY        = cbFirstMessage + 1
Const MSG_FL_FOCUS_TITLE  = cbFirstMessage + 2
Const MSG_FL_SHOW         = cbFirstMessage + 3
Const MSG_FL_FOCUS_START  = cbFirstMessage + 4
Const MSG_FL_FOCUS_END    = cbFirstMessage + 5
Const MSG_FL_SEL_LIST     = cbFirstMessage + 6
Const MSG_FL_SEL_ONE      = cbFirstMessage + 7

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Form Load Method
'
' Copyright (C) 2000. Dovetail Software. All Rights Reserved.
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Public Sub Form_Load()
  Dim ret_strings As New List           ' Strings to place on controls
  Dim str_list As New List              ' List of aliases
  Dim t_int    As Integer               ' Looping integer
  Dim tbl_rec  As Record                ' Each alert_table

                                        ' Do the default action
  Me.DoDefault

                                        ' Get strings for controls, place them
  get_strings 15670, 2, locale, "", ret_strings
  LBL_QRY_FOR.Caption = ret_strings.ItemByIndex(0)
  BTN_LIST.Caption = ret_strings.ItemByIndex(1)

                                        ' Assume they can choose "no table"
  str_list.ItemType = "string"



                                        ' Get the list. For each one...
                                        '  Get the record. Add the alias to
                                        '   the list
                                        ' Put list in dropdown list box
  Set tbl_list = Cobj_LIST_TABLE.Contents
  For t_int = 0 To tbl_list.Count - 1
    Set tbl_rec = tbl_list.ItemByIndex(t_int)
    str_list.AppendItem tbl_rec.GetField("alias_name")
  Next t_int
  Cobj_TABLE_LIST.Fill str_list
  DDL_TABLE_Click

                                        ' Turn off controls, as appropriate
  Me.DisableControls "BTN_ADD", "BTN_DEL"
End Sub

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Dropdown List Click Method
'
' Copyright (C) 2000. Dovetail Software. All Rights Reserved.
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Public Sub DDL_TABLE_Click()
  Dim sel_list As List                  ' List of selected indexes
  Dim cur_item As Integer               ' Item selected from list
  Dim num_qry  As Integer               ' Number of query columns

                                        ' Get item selected from the list
  Set sel_list = DDL_TABLE.SelectedIndexes
  cur_item = sel_list.ItemByIndex(0)

                                        ' Get the table record and number of query cols
                                        ' Set columns and make visible based on what's there
  Set tbl_rec = tbl_list.ItemByIndex(cur_item)
  num_qry = tbl_rec.GetField("num_query_cols")
  clear_items num_qry
  LBL_1.Caption = tbl_rec.GetField("lbl1")
  TXT_1.Text = ""
  If num_qry >= 2 Then
     LBL_2.Caption = tbl_rec.GetField("lbl2")
     TXT_2.Text = ""
  End If
  If num_qry >= 3 Then
     LBL_3.Caption = tbl_rec.GetField("lbl3")
     TXT_3.Text = ""
  End If
  If num_qry >= 4 Then
     LBL_4.Caption = tbl_rec.GetField("lbl4")
     TXT_4.Text = ""
  End If
  If num_qry >= 5 Then
     LBL_5.Caption = tbl_rec.GetField("lbl5")
     TXT_5.Text = ""
  End If

                                        ' Get the table number of selected item
                                        ' Turn off the buttons
                                        ' Clear the available grid
                                        ' Unselect the selected grid
  tbl_num = get_table_number(tbl_rec)
  BTN_ADD.Enabled = False
  BTN_DEL.Enabled = False
  CLB_AVAIL.Clear
  CLB_SEL.UnSelect
End Sub

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Clear Items for Querying
'
' Copyright (C) 2000. Dovetail Software. All Rights Reserved.
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Public Sub clear_items(items_to_show As Integer)
  LBL_5.Visible = items_to_show >= 5
  TXT_5.Visible = items_to_show >= 5
  LBL_4.Visible = items_to_show >= 4
  TXT_4.Visible = items_to_show >= 4
  LBL_3.Visible = items_to_show >= 3
  TXT_3.Visible = items_to_show >= 3
  LBL_2.Visible = items_to_show >= 2
  TXT_2.Visible = items_to_show >= 2
  LBL_1.Visible = items_to_show >= 1
  TXT_1.Visible = items_to_show >= 1
End Sub

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Grid Click/Double Click Methods
'
' Copyright (C) 2000. Dovetail Software. All Rights Reserved.
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Public Sub CLB_AVAIL_Click()
  BTN_ADD.Enabled = True
  BTN_DEL.Enabled = False
  CLB_SEL.UnSelect
End Sub

Public Sub CLB_SEL_Click()
  BTN_ADD.Enabled = False
  BTN_DEL.Enabled = True
  CLB_AVAIL.UnSelect
End Sub

Public Sub CLB_AVAIL_DblClick()
  BTN_ADD.Value = True
End Sub

Public Sub CLB_SEL_DblClick()
  BTN_DEL.Value = True
End Sub

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Delete Button Click Method
'
' Copyright (C) 2000. Dovetail Software. All Rights Reserved.
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Public Sub BTN_DEL_Click()
  Dim t_int As Integer                  ' Looping integer
  Dim sel_list As List                  ' List of already selected records
  Dim dat_list As List                  ' List of data records from sel grid
  Dim del_list As List                  ' List of data records deleted from sel grid
  Dim ato_rec  As Record                ' Each record to be deleted which has objid

                                        ' Get data from sel grid
                                        ' Get which row(s) are selected
                                        ' Go through them, and remove them from the list
                                        '  and add to the "to be deleted" list
  Set dat_list = Cobj_LOR_SEL.Contents
  Set sel_list = Cobj_LOS_SEL.Contents
  Set del_list = Cobj_LOR_DEL.Contents

  For t_int = sel_list.Count - 1 To 0 Step -1

    Set ato_rec = dat_list.ItemByIndex(sel_list.ItemByIndex(t_int))
    del_list.AppendItem ato_rec
    dat_list.RemoveByIndex sel_list.ItemByIndex(t_int)

  Next t_int

                                        ' Unhighlight items
                                        ' Put data back in grid
                                        ' Turn on the dirty bit
  CLB_SEL.UnSelect
  BTN_DEL.Enabled = False
  Cobj_LOR_SEL.Fill dat_list
  Cobj_LOR_DEL.Fill del_list
  Me.NotifyParent MSG_FL_DIRTY
End Sub

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Add Button Click Method
'
' Copyright (C) 2000. Dovetail Software. All Rights Reserved.
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Public Sub BTN_ADD_Click()
  Dim t_int As Integer                  ' Looping integer
  Dim sel_list As List                  ' List of already selected records
  Dim av_list  As List                  ' List of available records selected
  Dim av_rec   As Record                ' Each available record
  Dim new_rec  As Record                ' New record for the selected grid
  Dim obj_name As String                ' Object type of avail records

                                        ' Get list of items already selected
                                        ' Get list of items picked in avail list
                                        ' Get object type
                                        ' For each selected item in avail list...
                                        '  Get it. If it is not already selected...
                                        '  Build new address record (copy), and
                                        '   set the proper fields. Add to the list
  Set sel_list = Cobj_LOR_SEL.Contents
  Set av_list = CLB_AVAIL.SelectedList
  obj_name = DDL_TABLE.Selected
  For t_int = 0 To av_list.Count - 1
    Set av_rec = av_list.ItemByIndex(t_int)

    If sel_list.FindFirstIndex(av_rec.GetField("objid"), "objid", obj_name, "state") < 0 Then
       Set new_rec = av_rec.Copy
       new_rec.SetField "state", obj_name
       new_rec.SetField "city", tbl_rec.GetField("table_or_view")
       new_rec.SetField "zipcode", Trim$(Str$(tbl_num))
       new_rec.SetField "dev", 1000     ' mark a new record
       sel_list.AppendItem new_rec
    End If
  Next t_int

                                        ' Put list back in grid.
                                        ' Unhighlight the proper items
                                        ' Turn on the dirty bit
  Cobj_LOR_SEL.Fill sel_list
  CLB_AVAIL.UnSelect
  BTN_ADD.Enabled = False
  Me.NotifyParent MSG_FL_DIRTY
End Sub

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' List Button Click Method
'
' Copyright (C) 2000. Dovetail Software. All Rights Reserved.
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Public Sub BTN_LIST_Click()
  Dim t_ret     As New BulkRetrieve     ' Structure to query the DB
  Dim t_list    As List                 ' List returned from query
  Dim t_int     As Integer              ' Looping integer
  Dim itm_rec   As Record               ' Each item record
  Dim addr_rec  As Record               ' Each new address record
  Dim addr_list As New List             ' List of records for grid
  Dim t_str     As String               ' Temporary string

  Dim obj_list As New List              ' List of objids found
  Dim delta    As Integer               ' Delta on bulk retrieve
  Dim bIsString1 As Boolean
  Dim bIsString2 As Boolean
  Dim bIsString3 As Boolean
  Dim bIsString4 As Boolean
  Dim bIsString5 As Boolean
  Dim temp_record As New record


                                        ' If there is a table-based search...
  t_ret.SimpleQuery 0, tbl_rec.GetField("table_or_view")
  temp_record.RecordType = tbl_rec.GetField("table_or_view")

'debug.print tbl_rec
  t_str = tbl_rec.GetField("objid_column")
  If t_str = "" Then t_str = "objid"
  t_ret.AppendFilter 0, t_str, cbGreater, -1
  If TXT_1.Visible Then
     If TXT_1.Text <> "" Then
        't_ret.AppendFilter 0, tbl_rec.GetField("col1"), cbLike, TXT_1.Text & "%"

                                ' See if this is a string field - assume yes
		   bIsString1 = True
		   On Error GoTo err_handler1
		   temp_record.SetField tbl_rec.GetField("col1"), "foo"
		   GoTo continue1
           err_handler1:
		   bIsString1 = False
           continue1:
		   On Error GoTo 0
                                ' If this is a string field, use a cbLike, else, use a cbEqual operator
		   If bIsString1 Then
              t_ret.AppendFilter 0, tbl_rec.GetField("col1"), cbLike, TXT_1.Text  & "%"
   		   Else
              t_ret.AppendFilter 0, tbl_rec.GetField("col1"), cbEqual, TXT_1.Text
		   End If


     End If
  End If
  If TXT_2.Visible Then
     If TXT_2.Text <> "" Then
        't_ret.AppendFilter 0, tbl_rec.GetField("col2"), cbLike, TXT_2.Text & "%"
                                ' See if this is a string field - assume yes
		   bIsString2 = True
		   On Error GoTo err_handler2
		   temp_record.SetField tbl_rec.GetField("col2"), "foo"
		   GoTo continue2
           err_handler2:
		   bIsString2 = False
           continue2:
		   On Error GoTo 0
                                ' If this is a string field, use a cbLike, else, use a cbEqual operator
		   If bIsString2 Then
              t_ret.AppendFilter 0, tbl_rec.GetField("col2"), cbLike, TXT_2.Text  & "%"
   		   Else
              t_ret.AppendFilter 0, tbl_rec.GetField("col2"), cbEqual, TXT_2.Text
		   End If


     End If
  End If
  If TXT_3.Visible Then
     If TXT_3.Text <> "" Then
        't_ret.AppendFilter 0, tbl_rec.GetField("col3"), cbLike, TXT_3.Text & "%"
                                ' See if this is a string field - assume yes
		   bIsString3 = True
		   On Error GoTo err_handler3
		   temp_record.SetField tbl_rec.GetField("col3"), "foo"
		   GoTo continue3
           err_handler3:
		   bIsString3 = False
           continue3:
		   On Error GoTo 0
                                ' If this is a string field, use a cbLike, else, use a cbEqual operator
		   If bIsString3 Then
              t_ret.AppendFilter 0, tbl_rec.GetField("col3"), cbLike, TXT_3.Text  & "%"
   		   Else
              t_ret.AppendFilter 0, tbl_rec.GetField("col3"), cbEqual, TXT_3.Text
		   End If


     End If
  End If
  If TXT_4.Visible Then
     If TXT_4.Text <> "" Then
        't_ret.AppendFilter 0, tbl_rec.GetField("col4"), cbLike, TXT_4.Text & "%"
                                ' See if this is a string field - assume yes
		   bIsString4 = True
		   On Error GoTo err_handler4
		   temp_record.SetField tbl_rec.GetField("col4"), "foo"
		   GoTo continue4
           err_handler4:
		   bIsString4 = False
           continue4:
		   On Error GoTo 0
                                ' If this is a string field, use a cbLike, else, use a cbEqual operator
		   If bIsString4 Then
              t_ret.AppendFilter 0, tbl_rec.GetField("col4"), cbLike, TXT_4.Text  & "%"
   		   Else
              t_ret.AppendFilter 0, tbl_rec.GetField("col4"), cbEqual, TXT_4.Text
		   End If


     End If
  End If
  If TXT_5.Visible Then
     If TXT_5.Text <> "" Then
        't_ret.AppendFilter 0, tbl_rec.GetField("col5"), cbLike, TXT_5.Text & "%"
                                ' See if this is a string field - assume yes
		   bIsString5 = True
		   On Error GoTo err_handler5
		   temp_record.SetField tbl_rec.GetField("col5"), "foo"
		   GoTo continue5
           err_handler5:
		   bIsString5 = False
           continue5:
		   On Error GoTo 0
                                ' If this is a string field, use a cbLike, else, use a cbEqual operator
		   If bIsString5 Then
              t_ret.AppendFilter 0, tbl_rec.GetField("col5"), cbLike, TXT_5.Text  & "%"
   		   Else
              t_ret.AppendFilter 0, tbl_rec.GetField("col5"), cbEqual, TXT_5.Text
		   End If


     End If
  End If
  t_ret.RetrieveRecords
  Set t_list = t_ret.GetRecordList(0)

                                        ' For each record found...
                                        '  Get the record
                                        '  Build up a new dummy record for the grid
                                        '  Set the fields (including objid)
                                        '  Put in the list
                                        ' Put the list in the grid
  addr_list.ItemType = "record"
  For t_int = 0 To t_list.Count - 1
    Set itm_rec = t_list.ItemByIndex(t_int)

    Set addr_rec = New Record
    addr_rec.RecordType = "address"

    t_str = tbl_rec.GetField("out_col1")
    If t_str <> "" Then
       addr_rec.SetField "address", itm_rec.GetField(t_str)
    End If
    t_str = tbl_rec.GetField("out_col2")
    If t_str <> "" Then
       addr_rec.SetField "address_2", itm_rec.GetField(t_str)
    End If
    addr_rec.SetField "objid", itm_rec.GetField("objid")
    addr_list.AppendItem addr_rec
  Next t_int
  Cobj_LOR_AVAIL.Fill addr_list

                                        ' Turn off controls, as appropriate
  Me.DisableControls "BTN_ADD", "BTN_DEL"
  CLB_SEL.UnSelect
  CLB_AVAIL.UnSelect
End Sub